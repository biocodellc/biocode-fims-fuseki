buildscript {
    repositories {
        maven {
            url "http://repo.biocodellc.com/repository/maven-private/"
            credentials {
                username mavenUser
                password mavenPass
            }
        }
        mavenLocal()
    }
    dependencies {
        classpath "org.biocode:gradle-fims:1.1.1"
    }
}

apply plugin: "application"
apply plugin: "org.biocode.fims-app"

ext.fimsCommonsVersion = "0.1.1"

fims {
    maven {
        username mavenUser
        password mavenPass
    }
}

repositories {
    add(fims.mavenFims())
    mavenLocal()
}

// need to evaluate childProjects first so we can add the childProject server dependencies to the server configuration
evaluationDependsOnChildren()

dependencies {
    server 'org.apache.jena:jena-core:2.7.1'
    server 'org.apache.jena:jena-arq:2.9.1'
    server 'org.apache.jena:jena-tdb:0.9.1'

    server('org.apache.commons:commons-digester3:3.2') {
        exclude module: 'asm'
    }
    server 'commons-cli:commons-cli:1.2'
    server 'commons-lang:commons-lang:2.6'
    server 'org.apache.poi:poi:3.10.1'
    server 'org.apache.poi:poi-ooxml:3.10.1'
    server 'com.googlecode.json-simple:json-simple:1.1.1'
    server group: 'org.springframework', name: 'spring-context', version: '4.3.4.RELEASE'
    server group: 'org.elasticsearch.client', name: 'transport', version: '5.0.0'
    server group: 'com.google.guava', name: 'guava', version: '21.0'
    server group: 'commons-collections', name: 'commons-collections', version: '3.2.2'

    server group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.8.4'

    server group: 'org.biocode', name: 'd2rq', version: '0.8.1'
    compile composite.resolveDependency("org.biocode:biocode-fims-commons:${fimsCommonsVersion}", "biocode-fims-commons")

    testCompile "junit:junit-dep:4.10"

    subprojects.each {
        project.configurations.server.dependencies.addAll(it.configurations.server.dependencies)
    }
}

//=============================
//= application configuration
//=============================
mainClassName = "biocode.fims.fuseki.triplify.Triplifier"

distributions {
    main {
        contents {
            into('lib') {
                from configurations.server
            }
        }
    }
}

startScripts {
    classpath = files(jar.archivePath, configurations.server, configurations.runtime)
}

run {
    classpath = configurations.server + sourceSets.main.runtimeClasspath

    if (project.hasProperty("appArgs")) {
        args Eval.me(appArgs)
    }
}
